{
  "version": 3,
  "sources": [
    "node_modules\\browserify\\node_modules\\browser-pack\\_prelude.js",
    "src\\index.js",
    "node_modules\\xcssmatrix\\index.js",
    "node_modules\\xcssmatrix\\lib\\Vector4.js",
    "node_modules\\xcssmatrix\\lib\\XCSSMatrix.js",
    "node_modules\\xcssmatrix\\lib\\utils\\angle.js",
    "node_modules\\xcssmatrix\\lib\\utils\\cssTransformString.js",
    "node_modules\\xcssmatrix\\lib\\utils\\matrix.js",
    "node_modules\\xcssmatrix\\lib\\utils\\vector.js",
    "src\\Elem\\index.js",
    "src\\Elem\\utils.js",
    "src\\Matrix\\decompose.js",
    "src\\Matrix\\index.js",
    "src\\animators\\Animator.js",
    "src\\animators\\FluxSpring.js",
    "src\\animators\\FluxTween.js",
    "src\\animators\\animations\\Spring.js",
    "src\\animators\\animations\\Tween.js",
    "src\\easing.js",
    "src\\loop.js",
    "src\\transform-prop.js",
    "src\\transformers\\Matrix\\expand-shorthand.js",
    "src\\transformers\\Matrix\\index.js",
    "src\\transformers\\Obj\\index.js",
    "src\\utils.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACriBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACllGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnphHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var Tween     = require('./animators/FluxTween'),\n    Spring    = require('./animators/FluxSpring'),\n    transform = require('./transform-prop');\n\nvar flux = {\n\ttransform: transform,\n\n\ttween: function(obj) {\n\n        return Tween.create(obj);\n\n    },\n\tspring: function(obj) {\n\n        return Spring.create(obj);\n\n    },\n\n\teasing: require('./easing'),\n\n\tupdate: require('./loop').update,\n\n    applyMatrix: function(obj, tween) {\n        var elem = tween.elem,\n            matrix = tween.matrix;\n\n        if (!elem || !matrix) { return; }\n\n        elem.style[transform] = matrix.toString();\n    },\n\n    plugin: function(name, fn) {\n\n        Tween.prototype[name] = Spring.prototype[name] = function() {\n\n            fn.apply(this, arguments);\n            return this;\n\n        };\n\n        return flux;\n\n    }\n};\n\nmodule.exports = flux;",
    "var XCSSMatrix = require('./lib/XCSSMatrix.js');\nmodule.exports = XCSSMatrix;\n",
    "var vector = require('./utils/vector');\nmodule.exports = Vector4;\n\n/**\n * A 4 dimensional vector\n * @author Joe Lambert\n * @constructor\n */\nfunction Vector4(x, y, z, w) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  this.w = w;\n  this.checkValues();\n}\n\n/**\n * Ensure that values are not undefined\n * @author Joe Lambert\n * @returns null\n */\n\nVector4.prototype.checkValues = function() {\n  this.x = this.x || 0;\n  this.y = this.y || 0;\n  this.z = this.z || 0;\n  this.w = this.w || 0;\n};\n\n/**\n * Get the length of the vector\n * @author Joe Lambert\n * @returns {float}\n */\n\nVector4.prototype.length = function() {\n  this.checkValues();\n  return vector.length(this);\n};\n\n\n/**\n * Get a normalised representation of the vector\n * @author Joe Lambert\n * @returns {Vector4}\n */\n\nVector4.prototype.normalize = function() {\n\treturn vector.normalize(this);\n};\n\n\n/**\n * Vector Dot-Product\n * @param {Vector4} v The second vector to apply the product to\n * @author Joe Lambert\n * @returns {float} The Dot-Product of this and v.\n */\n\nVector4.prototype.dot = function(v) {\n  return vector.dot(this, v);\n};\n\n\n/**\n * Vector Cross-Product\n * @param {Vector4} v The second vector to apply the product to\n * @author Joe Lambert\n * @returns {Vector4} The Cross-Product of this and v.\n */\n\nVector4.prototype.cross = function(v) {\n  return vector.cross(this, v);\n};\n\n\n/**\n * Helper function required for matrix decomposition\n * A Javascript implementation of pseudo code available from http://www.w3.org/TR/css3-2d-transforms/#matrix-decomposition\n * @param {Vector4} aPoint A 3D point\n * @param {float} ascl\n * @param {float} bscl\n * @author Joe Lambert\n * @returns {Vector4}\n */\n\nVector4.prototype.combine = function(bPoint, ascl, bscl) {\n  return vector.combine(this, bPoint, ascl, bscl);\n};\n\nVector4.prototype.multiplyByMatrix = function (matrix) {\n  return vector.multiplyByMatrix(this, matrix);\n};\n",
    "var utils = {\n    angles: require('./utils/angle'),\n    matrix: require('./utils/matrix'),\n    transp: require('./utils/cssTransformString'),\n    funcs: {\n        // Given a function `fn`, return a function which calls `fn` with only 1\n        //   argument, no matter how many are given.\n        // Most useful where you only want the first value from a map/foreach/etc\n        onlyFirstArg: function (fn, context) {\n            context = context || this;\n\n            return function (first) {\n                return fn.call(context, first);\n            };\n        }\n    }\n};\n\n\n/**\n *  Given a CSS transform string (like `rotate(3rad)`, or\n *    `matrix(1, 0, 0, 0, 1, 0)`), return an instance compatible with\n *    [`WebKitCSSMatrix`](http://developer.apple.com/library/safari/documentation/AudioVideo/Reference/WebKitCSSMatrixClassReference/WebKitCSSMatrix/WebKitCSSMatrix.html)\n *  @constructor\n *  @param {string} domstr - a string representation of a 2D or 3D transform matrix\n *    in the form given by the CSS transform property, i.e. just like the\n *    output from [[@link#toString]].\n *  @member {number} a - The first 2D vector value.\n *  @member {number} b - The second 2D vector value.\n *  @member {number} c - The third 2D vector value.\n *  @member {number} d - The fourth 2D vector value.\n *  @member {number} e - The fifth 2D vector value.\n *  @member {number} f - The sixth 2D vector value.\n *  @member {number} m11 - The 3D matrix value in the first row and first column.\n *  @member {number} m12 - The 3D matrix value in the first row and second column.\n *  @member {number} m13 - The 3D matrix value in the first row and third column.\n *  @member {number} m14 - The 3D matrix value in the first row and fourth column.\n *  @member {number} m21 - The 3D matrix value in the second row and first column.\n *  @member {number} m22 - The 3D matrix value in the second row and second column.\n *  @member {number} m23 - The 3D matrix value in the second row and third column.\n *  @member {number} m24 - The 3D matrix value in the second row and fourth column.\n *  @member {number} m31 - The 3D matrix value in the third row and first column.\n *  @member {number} m32 - The 3D matrix value in the third row and second column.\n *  @member {number} m33 - The 3D matrix value in the third row and third column.\n *  @member {number} m34 - The 3D matrix value in the third row and fourth column.\n *  @member {number} m41 - The 3D matrix value in the fourth row and first column.\n *  @member {number} m42 - The 3D matrix value in the fourth row and second column.\n *  @member {number} m43 - The 3D matrix value in the fourth row and third column.\n *  @member {number} m44 - The 3D matrix value in the fourth row and fourth column.\n *  @returns {XCSSMatrix} matrix\n */\nfunction XCSSMatrix(domstr) {\n    this.m11 = this.m22 = this.m33 = this.m44 = 1;\n\n               this.m12 = this.m13 = this.m14 =\n    this.m21 =            this.m23 = this.m24 =\n    this.m31 = this.m32 =            this.m34 =\n    this.m41 = this.m42 = this.m43            = 0;\n\n    if (typeof domstr === 'string') {\n        this.setMatrixValue(domstr);\n    }\n}\n\n/**\n *  XCSSMatrix.displayName = 'XCSSMatrix'\n */\nXCSSMatrix.displayName = 'XCSSMatrix';\n\nvar points2d = ['a', 'b', 'c', 'd', 'e', 'f'];\nvar points3d = [\n    'm11', 'm12', 'm13', 'm14',\n    'm21', 'm22', 'm23', 'm24',\n    'm31', 'm32', 'm33', 'm34',\n    'm41', 'm42', 'm43', 'm44'\n];\n\n([\n    ['m11', 'a'],\n    ['m12', 'b'],\n    ['m21', 'c'],\n    ['m22', 'd'],\n    ['m41', 'e'],\n    ['m42', 'f']\n]).forEach(function (pair) {\n    var key3d = pair[0], key2d = pair[1];\n\n    Object.defineProperty(XCSSMatrix.prototype, key2d, {\n        set: function (val) {\n            this[key3d] = val;\n        },\n\n        get: function () {\n            return this[key3d];\n        },\n        enumerable : true,\n        configurable : true\n    });\n});\n\n\n/**\n *  Multiply one matrix by another\n *  @method\n *  @member\n *  @param {XCSSMatrix} otherMatrix - The matrix to multiply this one by.\n */\nXCSSMatrix.prototype.multiply = function (otherMatrix) {\n    return utils.matrix.multiply(this, otherMatrix);\n};\n\n/**\n *  If the matrix is invertible, returns its inverse, otherwise returns null.\n *  @method\n *  @member\n *  @returns {XCSSMatrix|null}\n */\nXCSSMatrix.prototype.inverse = function () {\n    return utils.matrix.inverse(this);\n};\n\n/**\n *  Returns the result of rotating the matrix by a given vector.\n *\n *  If only the first argument is provided, the matrix is only rotated about\n *  the z axis.\n *  @method\n *  @member\n *  @param {number} rotX - The rotation around the x axis.\n *  @param {number} rotY - The rotation around the y axis. If undefined, the x component is used.\n *  @param {number} rotZ - The rotation around the z axis. If undefined, the x component is used.\n *  @returns XCSSMatrix\n */\nXCSSMatrix.prototype.rotate = function (rx, ry, rz) {\n\n    if (typeof rx !== 'number' || isNaN(rx)) rx = 0;\n\n    if ((typeof ry !== 'number' || isNaN(ry)) &&\n        (typeof rz !== 'number' || isNaN(rz))) {\n        rz = rx;\n        rx = 0;\n        ry = 0;\n    }\n\n    if (typeof ry !== 'number' || isNaN(ry)) ry = 0;\n    if (typeof rz !== 'number' || isNaN(rz)) rz = 0;\n\n    rx = utils.angles.deg2rad(rx);\n    ry = utils.angles.deg2rad(ry);\n    rz = utils.angles.deg2rad(rz);\n\n    var tx = new XCSSMatrix(),\n        ty = new XCSSMatrix(),\n        tz = new XCSSMatrix(),\n        sinA, cosA, sq;\n\n    rz /= 2;\n    sinA  = Math.sin(rz);\n    cosA  = Math.cos(rz);\n    sq = sinA * sinA;\n\n    // Matrices are identity outside the assigned values\n    tz.m11 = tz.m22 = 1 - 2 * sq;\n    tz.m12 = tz.m21 = 2 * sinA * cosA;\n    tz.m21 *= -1;\n\n    ry /= 2;\n    sinA  = Math.sin(ry);\n    cosA  = Math.cos(ry);\n    sq = sinA * sinA;\n\n    ty.m11 = ty.m33 = 1 - 2 * sq;\n    ty.m13 = ty.m31 = 2 * sinA * cosA;\n    ty.m13 *= -1;\n\n    rx /= 2;\n    sinA = Math.sin(rx);\n    cosA = Math.cos(rx);\n    sq = sinA * sinA;\n\n    tx.m22 = tx.m33 = 1 - 2 * sq;\n    tx.m23 = tx.m32 = 2 * sinA * cosA;\n    tx.m32 *= -1;\n\n    var identityMatrix = new XCSSMatrix(); // returns identity matrix by default\n    var isIdentity     = this.toString() === identityMatrix.toString();\n    var rotatedMatrix  = isIdentity ?\n            tz.multiply(ty).multiply(tx) :\n            this.multiply(tx).multiply(ty).multiply(tz);\n\n    return rotatedMatrix;\n};\n\n/**\n *  Returns the result of rotating the matrix around a given vector by a given\n *  angle.\n *\n *  If the given vector is the origin vector then the matrix is rotated by the\n *  given angle around the z axis.\n *  @method\n *  @member\n *  @param {number} rotX - The rotation around the x axis.\n *  @param {number} rotY - The rotation around the y axis. If undefined, the x component is used.\n *  @param {number} rotZ - The rotation around the z axis. If undefined, the x component is used.\n *  @param {number} angle - The angle of rotation about the axis vector, in degrees.\n *  @returns XCSSMatrix\n */\nXCSSMatrix.prototype.rotateAxisAngle = function (x, y, z, a) {\n    if (typeof x !== 'number' || isNaN(x)) x = 0;\n    if (typeof y !== 'number' || isNaN(y)) y = 0;\n    if (typeof z !== 'number' || isNaN(z)) z = 0;\n    if (typeof a !== 'number' || isNaN(a)) a = 0;\n    if (x === 0 && y === 0 && z === 0) z = 1;\n    a = (utils.angles.deg2rad(a) || 0) / 2;\n    var t         = new XCSSMatrix(),\n        len       = Math.sqrt(x * x + y * y + z * z),\n        cosA      = Math.cos(a),\n        sinA      = Math.sin(a),\n        sq        = sinA * sinA,\n        sc        = sinA * cosA,\n        precision = function(v) { return parseFloat((v).toFixed(6)); },\n        x2, y2, z2;\n\n    // Bad vector, use something sensible\n    if (len === 0) {\n        x = 0;\n        y = 0;\n        z = 1;\n    } else if (len !== 1) {\n        x /= len;\n        y /= len;\n        z /= len;\n    }\n\n    // Optimise cases where axis is along major axis\n    if (x === 1 && y === 0 && z === 0) {\n        t.m22 = t.m33 = 1 - 2 * sq;\n        t.m23 = t.m32 = 2 * sc;\n        t.m32 *= -1;\n    } else if (x === 0 && y === 1 && z === 0) {\n        t.m11 = t.m33 = 1 - 2 * sq;\n        t.m13 = t.m31 = 2 * sc;\n        t.m13 *= -1;\n    } else if (x === 0 && y === 0 && z === 1) {\n        t.m11 = t.m22 = 1 - 2 * sq;\n        t.m12 = t.m21 = 2 * sc;\n        t.m21 *= -1;\n    } else {\n        x2  = x * x;\n        y2  = y * y;\n        z2  = z * z;\n        // http://dev.w3.org/csswg/css-transforms/#mathematical-description\n        t.m11 = precision(1 - 2 * (y2 + z2) * sq);\n        t.m12 = precision(2 * (x * y * sq + z * sc));\n        t.m13 = precision(2 * (x * z * sq - y * sc));\n        t.m21 = precision(2 * (x * y * sq - z * sc));\n        t.m22 = precision(1 - 2 * (x2 + z2) * sq);\n        t.m23 = precision(2 * (y * z * sq + x * sc));\n        t.m31 = precision(2 * (x * z * sq + y * sc));\n        t.m32 = precision(2 * (y * z * sq - x * sc));\n        t.m33 = precision(1 - 2 * (x2 + y2) * sq);\n    }\n\n    return this.multiply(t);\n};\n\n/**\n *  Returns the result of scaling the matrix by a given vector.\n *  @method\n *  @member\n *  @param {number} scaleX - the scaling factor in the x axis.\n *  @param {number} scaleY - the scaling factor in the y axis. If undefined, the x component is used.\n *  @param {number} scaleZ - the scaling factor in the z axis. If undefined, 1 is used.\n *  @returns XCSSMatrix\n */\nXCSSMatrix.prototype.scale = function (scaleX, scaleY, scaleZ) {\n    var transform = new XCSSMatrix();\n\n    if (typeof scaleX !== 'number' || isNaN(scaleX)) scaleX = 1;\n    if (typeof scaleY !== 'number' || isNaN(scaleY)) scaleY = scaleX;\n    if (typeof scaleZ !== 'number' || isNaN(scaleZ)) scaleZ = 1;\n\n    transform.m11 = scaleX;\n    transform.m22 = scaleY;\n    transform.m33 = scaleZ;\n\n    return this.multiply(transform);\n};\n\n/**\n *  Returns the result of skewing the matrix by a given vector.\n *  @method\n *  @member\n *  @param {number} skewX - The scaling factor in the x axis.\n *  @returns XCSSMatrix\n */\nXCSSMatrix.prototype.skewX = function (degrees) {\n    var radians   = utils.angles.deg2rad(degrees);\n    var transform = new XCSSMatrix();\n\n    transform.c = Math.tan(radians);\n\n    return this.multiply(transform);\n};\n\n/**\n *  Returns the result of skewing the matrix by a given vector.\n *  @method\n *  @member\n *  @param {number} skewY - the scaling factor in the x axis.\n *  @returns XCSSMatrix\n */\nXCSSMatrix.prototype.skewY = function (degrees) {\n    var radians   = utils.angles.deg2rad(degrees);\n    var transform = new XCSSMatrix();\n\n    transform.b = Math.tan(radians);\n\n    return this.multiply(transform);\n};\n\n/**\n *  Returns the result of translating the matrix by a given vector.\n *  @method\n *  @member\n *  @param {number} x - The x component of the vector.\n *  @param {number} y - The y component of the vector.\n *  @param {number} z - The z component of the vector. If undefined, 0 is used.\n *  @returns XCSSMatrix\n */\nXCSSMatrix.prototype.translate = function (x, y, z) {\n    var t = new XCSSMatrix();\n\n    if (typeof x !== 'number' || isNaN(x)) x = 0;\n    if (typeof y !== 'number' || isNaN(y)) y = 0;\n    if (typeof z !== 'number' || isNaN(z)) z = 0;\n\n    t.m41 = x;\n    t.m42 = y;\n    t.m43 = z;\n\n    return this.multiply(t);\n};\n\n/**\n *  Sets the matrix values using a string representation, such as that produced\n *  by the [[XCSSMatrix#toString]] method.\n *  @method\n *  @member\n *  @params {string} domstr - A string representation of a 2D or 3D transform matrix\n *    in the form given by the CSS transform property, i.e. just like the\n *    output from [[XCSSMatrix#toString]].\n *  @returns undefined\n */\nXCSSMatrix.prototype.setMatrixValue = function (domstr) {\n\n    var matrixString = toMatrixString(domstr.trim());\n    var matrixObject = utils.transp.statementToObject(matrixString);\n\n    if (!matrixObject) return;\n\n    var is3d   = matrixObject.key === utils.transp.matrixFn3d;\n    var keygen = is3d ? indextoKey3d : indextoKey2d;\n    var values = matrixObject.value;\n    var count  = values.length;\n\n    if ((is3d && count !== 16) || !(is3d || count === 6)) return;\n\n    values.forEach(function (obj, i) {\n        var key = keygen(i);\n        this[key] = obj.value;\n    }, this);\n};\n\nfunction indextoKey2d (index) {\n    return String.fromCharCode(index + 97); // ASCII char 97 == 'a'\n}\n\nfunction indextoKey3d (index) {\n    return ('m' + (Math.floor(index / 4) + 1)) + (index % 4 + 1);\n}\n/**\n *  Returns a string representation of the matrix.\n *  @method\n *  @memberof XCSSMatrix\n *  @returns {string} matrixString - a string like `matrix(1.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000)`\n *\n **/\nXCSSMatrix.prototype.toString = function () {\n    var points, prefix;\n\n    if (utils.matrix.isAffine(this)) {\n        prefix = utils.transp.matrixFn2d;\n        points = points2d;\n    } else {\n        prefix = utils.transp.matrixFn3d;\n        points = points3d;\n    }\n\n    return prefix + '(' +\n        points.map(function (p) {\n            return this[p].toFixed(6);\n        }, this) .join(', ') +\n        ')';\n};\n\n// ====== toMatrixString ====== //\nvar jsFunctions = {\n    matrix: function (m, o) {\n        var m2 = new XCSSMatrix(o.unparsed);\n\n        return m.multiply(m2);\n    },\n    matrix3d: function (m, o) {\n        var m2 = new XCSSMatrix(o.unparsed);\n\n        return m.multiply(m2);\n    },\n\n    perspective: function (m, o) {\n        var m2 = new XCSSMatrix();\n        m2.m34 -= 1 / o.value[0].value;\n\n        return m.multiply(m2);\n    },\n\n    rotate: function (m, o) {\n        return m.rotate.apply(m, o.value.map(objectValues));\n    },\n    rotate3d: function (m, o) {\n        return m.rotateAxisAngle.apply(m, o.value.map(objectValues));\n    },\n    rotateX: function (m, o) {\n        return m.rotate.apply(m, [o.value[0].value, 0, 0]);\n    },\n    rotateY: function (m, o) {\n        return m.rotate.apply(m, [0, o.value[0].value, 0]);\n    },\n    rotateZ: function (m, o) {\n        return m.rotate.apply(m, [0, 0, o.value[0].value]);\n    },\n\n    scale: function (m, o) {\n        return m.scale.apply(m, o.value.map(objectValues));\n    },\n    scale3d: function (m, o) {\n        return m.scale.apply(m, o.value.map(objectValues));\n    },\n    scaleX: function (m, o) {\n        return m.scale.apply(m, o.value.map(objectValues));\n    },\n    scaleY: function (m, o) {\n        return m.scale.apply(m, [0, o.value[0].value, 0]);\n    },\n    scaleZ: function (m, o) {\n        return m.scale.apply(m, [0, 0, o.value[0].value]);\n    },\n\n    skew: function (m, o) {\n        var mX = new XCSSMatrix('skewX(' + o.value[0].unparsed + ')');\n        var mY = new XCSSMatrix('skewY(' + (o.value[1]&&o.value[1].unparsed || 0) + ')');\n        var sM = 'matrix(1.00000, '+ mY.b +', '+ mX.c +', 1.000000, 0.000000, 0.000000)';\n        var m2 = new XCSSMatrix(sM);\n\n        return m.multiply(m2);\n    },\n    skewX: function (m, o) {\n        return m.skewX.apply(m, [o.value[0].value]);\n    },\n    skewY: function (m, o) {\n        return m.skewY.apply(m, [o.value[0].value]);\n    },\n\n    translate: function (m, o) {\n        return m.translate.apply(m, o.value.map(objectValues));\n    },\n    translate3d: function (m, o) {\n        return m.translate.apply(m, o.value.map(objectValues));\n    },\n    translateX: function (m, o) {\n        return m.translate.apply(m, [o.value[0].value, 0, 0]);\n    },\n    translateY: function (m, o) {\n        return m.translate.apply(m, [0, o.value[0].value, 0]);\n    },\n    translateZ: function (m, o) {\n        return m.translate.apply(m, [0, 0, o.value[0].value]);\n    }\n};\n\nfunction objectValues(obj) {\n    return obj.value;\n}\n\nfunction cssFunctionToJsFunction(cssFunctionName) {\n    return jsFunctions[cssFunctionName];\n}\n\nfunction parsedToDegrees(parsed) {\n    if (parsed.units === 'rad') {\n        parsed.value = utils.angles.rad2deg(parsed.value);\n        parsed.units = 'deg';\n    }\n    else if (parsed.units === 'grad') {\n        parsed.value = utils.angles.grad2deg(parsed.value);\n        parsed.units = 'deg';\n    }\n\n    return parsed;\n}\n\nfunction transformMatrix(matrix, operation) {\n    // convert to degrees because all CSSMatrix methods expect degrees\n    operation.value = operation.value.map(parsedToDegrees);\n\n    var jsFunction = cssFunctionToJsFunction(operation.key);\n    var result     = jsFunction(matrix, operation);\n\n    return result || matrix;\n}\n\n/**\n *  Tranforms a `el.style.WebkitTransform`-style string\n *  (like `rotate(18rad) translate3d(50px, 100px, 10px)`)\n *  into a `getComputedStyle(el)`-style matrix string\n *  (like `matrix3d(0.660316, -0.750987, 0, 0, 0.750987, 0.660316, 0, 0, 0, 0, 1, 0, 108.114560, 28.482308, 10, 1)`)\n *  @private\n *  @method\n *  @param {string} transformString - `el.style.WebkitTransform`-style string (like `rotate(18rad) translate3d(50px, 100px, 10px)`)\n */\nfunction toMatrixString(transformString) {\n    var statements = utils.transp.stringToStatements(transformString);\n\n    if (statements.length === 1 && (/^matrix/).test(transformString)) {\n        return transformString;\n    }\n\n    // We only want the statement to pass to `utils.transp.statementToObject`\n    //   not the other values (index, list) from `map`\n    var statementToObject = utils.funcs.onlyFirstArg(utils.transp.statementToObject);\n    var operations        = statements.map(statementToObject);\n    var startingMatrix    = new XCSSMatrix();\n    var transformedMatrix = operations.reduce(transformMatrix, startingMatrix);\n    var matrixString      = transformedMatrix.toString();\n\n    return matrixString;\n}\n\nmodule.exports = XCSSMatrix;\n",
    "module.exports = {\n  deg2rad: deg2rad,\n  rad2deg: rad2deg,\n  grad2deg: grad2deg\n};\n\n/**\n *  Converts angles in degrees, which are used by the external API, to angles\n *  in radians used in internal calculations.\n *  @param {number} angle - An angle in degrees.\n *  @returns {number} radians\n */\nfunction deg2rad(angle) {\n    return angle * Math.PI / 180;\n}\n\nfunction rad2deg(radians) {\n    return radians * (180 / Math.PI);\n}\n\nfunction grad2deg(gradians) {\n    // 400 gradians in 360 degrees\n    return gradians / (400 / 360);\n}\n",
    "module.exports = {\n    matrixFn2d: 'matrix',\n    matrixFn3d: 'matrix3d',\n    valueToObject: valueToObject,\n    statementToObject: statementToObject,\n    stringToStatements: stringToStatements\n};\n\nfunction valueToObject(value) {\n    var units = /([\\-\\+]?[0-9]+[\\.0-9]*)(deg|rad|grad|px|%)*/;\n    var parts = value.match(units) || [];\n\n    return {\n        value: parseFloat(parts[1]),\n        units: parts[2],\n        unparsed: value\n    };\n}\n\nfunction statementToObject(statement, skipValues) {\n    var nameAndArgs    = /(\\w+)\\(([^\\)]+)\\)/i;\n    var statementParts = statement.toString().match(nameAndArgs).slice(1);\n    var functionName   = statementParts[0];\n    var stringValues   = statementParts[1].split(/, ?/);\n    var parsedValues   = !skipValues && stringValues.map(valueToObject);\n\n    return {\n        key: functionName,\n        value: parsedValues || stringValues,\n        unparsed: statement\n    };\n}\n\nfunction stringToStatements(transformString) {\n    var functionSignature   = /(\\w+)\\([^\\)]+\\)/ig;\n    var transformStatements = transformString.match(functionSignature) || [];\n\n    return transformStatements;\n}\n",
    "module.exports = {\n  determinant2x2: determinant2x2,\n  determinant3x3: determinant3x3,\n  determinant4x4: determinant4x4,\n  isAffine: isAffine,\n  isIdentityOrTranslation: isIdentityOrTranslation,\n  adjoint: adjoint,\n  inverse: inverse,\n  multiply: multiply,\n  decompose: decompose\n};\n\n/**\n *  Calculates the determinant of a 2x2 matrix.\n *  @param {number} a - Top-left value of the matrix.\n *  @param {number} b - Top-right value of the matrix.\n *  @param {number} c - Bottom-left value of the matrix.\n *  @param {number} d - Bottom-right value of the matrix.\n *  @returns {number}\n */\nfunction determinant2x2(a, b, c, d) {\n    return a * d - b * c;\n}\n\n/**\n *  Calculates the determinant of a 3x3 matrix.\n *  @param {number} a1 - Matrix value in position [1, 1].\n *  @param {number} a2 - Matrix value in position [1, 2].\n *  @param {number} a3 - Matrix value in position [1, 3].\n *  @param {number} b1 - Matrix value in position [2, 1].\n *  @param {number} b2 - Matrix value in position [2, 2].\n *  @param {number} b3 - Matrix value in position [2, 3].\n *  @param {number} c1 - Matrix value in position [3, 1].\n *  @param {number} c2 - Matrix value in position [3, 2].\n *  @param {number} c3 - Matrix value in position [3, 3].\n *  @returns {number}\n */\nfunction determinant3x3(a1, a2, a3, b1, b2, b3, c1, c2, c3) {\n\n    return a1 * determinant2x2(b2, b3, c2, c3) -\n           b1 * determinant2x2(a2, a3, c2, c3) +\n           c1 * determinant2x2(a2, a3, b2, b3);\n}\n\n/**\n *  Calculates the determinant of a 4x4 matrix.\n *  @param {XCSSMatrix} matrix - The matrix to calculate the determinant of.\n *  @returns {number}\n */\nfunction determinant4x4(matrix) {\n    var\n        m = matrix,\n        // Assign to individual variable names to aid selecting correct elements\n        a1 = m.m11, b1 = m.m21, c1 = m.m31, d1 = m.m41,\n        a2 = m.m12, b2 = m.m22, c2 = m.m32, d2 = m.m42,\n        a3 = m.m13, b3 = m.m23, c3 = m.m33, d3 = m.m43,\n        a4 = m.m14, b4 = m.m24, c4 = m.m34, d4 = m.m44;\n\n    return a1 * determinant3x3(b2, b3, b4, c2, c3, c4, d2, d3, d4) -\n           b1 * determinant3x3(a2, a3, a4, c2, c3, c4, d2, d3, d4) +\n           c1 * determinant3x3(a2, a3, a4, b2, b3, b4, d2, d3, d4) -\n           d1 * determinant3x3(a2, a3, a4, b2, b3, b4, c2, c3, c4);\n}\n\n/**\n *  Determines whether the matrix is affine.\n *  @returns {boolean}\n */\nfunction isAffine(matrix) {\n    return matrix.m13 === 0 && matrix.m14 === 0 &&\n           matrix.m23 === 0 && matrix.m24 === 0 &&\n           matrix.m31 === 0 && matrix.m32 === 0 &&\n           matrix.m33 === 1 && matrix.m34 === 0 &&\n           matrix.m43 === 0 && matrix.m44 === 1;\n}\n\n/**\n *  Returns whether the matrix is the identity matrix or a translation matrix.\n *  @return {boolean}\n */\nfunction isIdentityOrTranslation(matrix) {\n    var m = matrix;\n\n    return m.m11 === 1 && m.m12 === 0 && m.m13 === 0 && m.m14 === 0 &&\n           m.m21 === 0 && m.m22 === 1 && m.m23 === 0 && m.m24 === 0 &&\n           m.m31 === 0 && m.m31 === 0 && m.m33 === 1 && m.m34 === 0 &&\n    /* m41, m42 and m43 are the translation points */   m.m44 === 1;\n}\n\n/**\n *  Returns the adjoint matrix.\n *  @return {XCSSMatrix}\n */\nfunction adjoint(matrix) {\n    var m = matrix,\n        // make `result` the same type as the given metric\n        result = new matrix.constructor(),\n\n        a1 = m.m11, b1 = m.m12, c1 = m.m13, d1 = m.m14,\n        a2 = m.m21, b2 = m.m22, c2 = m.m23, d2 = m.m24,\n        a3 = m.m31, b3 = m.m32, c3 = m.m33, d3 = m.m34,\n        a4 = m.m41, b4 = m.m42, c4 = m.m43, d4 = m.m44;\n\n    // Row column labeling reversed since we transpose rows & columns\n    result.m11 =  determinant3x3(b2, b3, b4, c2, c3, c4, d2, d3, d4);\n    result.m21 = -determinant3x3(a2, a3, a4, c2, c3, c4, d2, d3, d4);\n    result.m31 =  determinant3x3(a2, a3, a4, b2, b3, b4, d2, d3, d4);\n    result.m41 = -determinant3x3(a2, a3, a4, b2, b3, b4, c2, c3, c4);\n\n    result.m12 = -determinant3x3(b1, b3, b4, c1, c3, c4, d1, d3, d4);\n    result.m22 =  determinant3x3(a1, a3, a4, c1, c3, c4, d1, d3, d4);\n    result.m32 = -determinant3x3(a1, a3, a4, b1, b3, b4, d1, d3, d4);\n    result.m42 =  determinant3x3(a1, a3, a4, b1, b3, b4, c1, c3, c4);\n\n    result.m13 =  determinant3x3(b1, b2, b4, c1, c2, c4, d1, d2, d4);\n    result.m23 = -determinant3x3(a1, a2, a4, c1, c2, c4, d1, d2, d4);\n    result.m33 =  determinant3x3(a1, a2, a4, b1, b2, b4, d1, d2, d4);\n    result.m43 = -determinant3x3(a1, a2, a4, b1, b2, b4, c1, c2, c4);\n\n    result.m14 = -determinant3x3(b1, b2, b3, c1, c2, c3, d1, d2, d3);\n    result.m24 =  determinant3x3(a1, a2, a3, c1, c2, c3, d1, d2, d3);\n    result.m34 = -determinant3x3(a1, a2, a3, b1, b2, b3, d1, d2, d3);\n    result.m44 =  determinant3x3(a1, a2, a3, b1, b2, b3, c1, c2, c3);\n\n    return result;\n}\n\nfunction inverse(matrix) {\n  var inv;\n\n  if (isIdentityOrTranslation(matrix)) {\n      inv = new matrix.constructor();\n\n      if (!(matrix.m41 === 0 && matrix.m42 === 0 && matrix.m43 === 0)) {\n          inv.m41 = -matrix.m41;\n          inv.m42 = -matrix.m42;\n          inv.m43 = -matrix.m43;\n      }\n\n      return inv;\n  }\n\n  // Calculate the adjoint matrix\n  var result = adjoint(matrix);\n\n  // Calculate the 4x4 determinant\n  var det = determinant4x4(matrix);\n\n  // If the determinant is zero, then the inverse matrix is not unique\n  if (Math.abs(det) < 1e-8) return null;\n\n  // Scale the adjoint matrix to get the inverse\n  for (var i = 1; i < 5; i++) {\n      for (var j = 1; j < 5; j++) {\n          result[('m' + i) + j] /= det;\n      }\n  }\n\n  return result;\n}\n\nfunction multiply(matrix, otherMatrix) {\n  if (!otherMatrix) return null;\n\n  var a = otherMatrix,\n      b = matrix,\n      c = new matrix.constructor();\n\n  c.m11 = a.m11 * b.m11 + a.m12 * b.m21 + a.m13 * b.m31 + a.m14 * b.m41;\n  c.m12 = a.m11 * b.m12 + a.m12 * b.m22 + a.m13 * b.m32 + a.m14 * b.m42;\n  c.m13 = a.m11 * b.m13 + a.m12 * b.m23 + a.m13 * b.m33 + a.m14 * b.m43;\n  c.m14 = a.m11 * b.m14 + a.m12 * b.m24 + a.m13 * b.m34 + a.m14 * b.m44;\n\n  c.m21 = a.m21 * b.m11 + a.m22 * b.m21 + a.m23 * b.m31 + a.m24 * b.m41;\n  c.m22 = a.m21 * b.m12 + a.m22 * b.m22 + a.m23 * b.m32 + a.m24 * b.m42;\n  c.m23 = a.m21 * b.m13 + a.m22 * b.m23 + a.m23 * b.m33 + a.m24 * b.m43;\n  c.m24 = a.m21 * b.m14 + a.m22 * b.m24 + a.m23 * b.m34 + a.m24 * b.m44;\n\n  c.m31 = a.m31 * b.m11 + a.m32 * b.m21 + a.m33 * b.m31 + a.m34 * b.m41;\n  c.m32 = a.m31 * b.m12 + a.m32 * b.m22 + a.m33 * b.m32 + a.m34 * b.m42;\n  c.m33 = a.m31 * b.m13 + a.m32 * b.m23 + a.m33 * b.m33 + a.m34 * b.m43;\n  c.m34 = a.m31 * b.m14 + a.m32 * b.m24 + a.m33 * b.m34 + a.m34 * b.m44;\n\n  c.m41 = a.m41 * b.m11 + a.m42 * b.m21 + a.m43 * b.m31 + a.m44 * b.m41;\n  c.m42 = a.m41 * b.m12 + a.m42 * b.m22 + a.m43 * b.m32 + a.m44 * b.m42;\n  c.m43 = a.m41 * b.m13 + a.m42 * b.m23 + a.m43 * b.m33 + a.m44 * b.m43;\n  c.m44 = a.m41 * b.m14 + a.m42 * b.m24 + a.m43 * b.m34 + a.m44 * b.m44;\n\n  return c;\n}\n\nfunction transpose(matrix) {\n  var result = new matrix.constructor();\n  var rows = 4, cols = 4;\n  var i = cols, j;\n  while (i) {\n    j = rows;\n    while (j) {\n      result['m' + i + j] = matrix['m'+ j + i];\n      j--;\n    }\n    i--;\n  }\n  return result;\n}\n\n/*\n  Input:  matrix      ; a 4x4 matrix\n  Output: translation ; a 3 component vector\n          scale       ; a 3 component vector\n          skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n          perspective ; a 4 component vector\n          rotate  ; a 4 component vector\n  Returns false if the matrix cannot be decomposed, true if it can\n*/\nvar Vector4 = require('../Vector4.js');\nfunction decompose(matrix) {\n  var perspectiveMatrix, rightHandSide, inversePerspectiveMatrix, transposedInversePerspectiveMatrix,\n      perspective, translate, row, i, len, scale, skew, pdum3, rotate;\n\n  // Normalize the matrix.\n  if (matrix.m33 == 0) { return false; }\n\n  for (i = 1; i <= 4; i++) {\n    for (j = 1; j < 4; j++) {\n      matrix['m'+i+j] /= matrix.m44;\n    }\n  }\n\n  // perspectiveMatrix is used to solve for perspective, but it also provides\n  // an easy way to test for singularity of the upper 3x3 component.\n  perspectiveMatrix = matrix;\n  perspectiveMatrix.m14 = 0;\n  perspectiveMatrix.m24 = 0;\n  perspectiveMatrix.m34 = 0;\n  perspectiveMatrix.m44 = 1;\n\n  if (determinant4x4(perspectiveMatrix) == 0) {\n    return false;\n  }\n\n  // First, isolate perspective.\n  if (matrix.m14 != 0 || matrix.m24 != 0 || matrix.m34 != 0) {\n    // rightHandSide is the right hand side of the equation.\n    rightHandSide = new Vector4(matrix.m14, matrix.m24, matrix.m34, matrix.m44);\n\n    // Solve the equation by inverting perspectiveMatrix and multiplying\n    // rightHandSide by the inverse.\n    inversePerspectiveMatrix = inverse(perspectiveMatrix);\n    transposedInversePerspectiveMatrix = transpose(inversePerspectiveMatrix);\n    perspective = rightHandSide.multiplyByMatrix(transposedInversePerspectiveMatrix);\n  }\n  else {\n    // No perspective.\n    perspective = new Vector4(0, 0, 0, 1);\n  }\n\n  // Next take care of translation\n  translate = new Vector4(matrix.m41, matrix.m42, matrix.m43);\n\n  // Now get scale and shear. 'row' is a 3 element array of 3 component vectors\n  row = [ new Vector4(), new Vector4(), new Vector4() ];\n  for (i = 1, len = row.length; i < len; i++) {\n    row[i-1].x = matrix['m'+i+'1'];\n    row[i-1].y = matrix['m'+i+'2'];\n    row[i-1].z = matrix['m'+i+'3'];\n  }\n\n  // Compute X scale factor and normalize first row.\n  scale = new Vector4();\n  skew = new Vector4();\n\n  scale.x = row[0].length();\n  row[0] = row[0].normalize();\n\n  // Compute XY shear factor and make 2nd row orthogonal to 1st.\n  skew.x = row[0].dot(row[1]);\n  row[1] = row[1].combine(row[0], 1.0, -skew.x);\n\n  // Now, compute Y scale and normalize 2nd row.\n  scale.y = row[1].length();\n  row[1] = row[1].normalize();\n  skew.x /= scale.y;\n\n  // Compute XZ and YZ shears, orthogonalize 3rd row\n  skew.y = row[0].dot(row[2]);\n  row[2] = row[2].combine(row[0], 1.0, -skew.y);\n  skew.z = row[1].dot(row[2]);\n  row[2] = row[2].combine(row[1], 1.0, -skew.z);\n\n  // Next, get Z scale and normalize 3rd row.\n  scale.z = row[2].length();\n  row[2] = row[2].normalize();\n  skew.y = (skew.y / scale.z) || 0;\n  skew.z = (skew.z / scale.z) || 0;\n\n  // At this point, the matrix (in rows) is orthonormal.\n  // Check for a coordinate system flip.  If the determinant\n  // is -1, then negate the matrix and the scaling factors.\n  pdum3 = row[1].cross(row[2]);\n  if (row[0].dot(pdum3) < 0) {\n    for (i = 0; i < 3; i++) {\n      scale.x *= -1;\n      row[i].x *= -1;\n      row[i].y *= -1;\n      row[i].z *= -1;\n    }\n  }\n\n  // Now, get the rotations out\n  // FROM W3C\n  rotate = new Vector4();\n  rotate.x = 0.5 * Math.sqrt(Math.max(1 + row[0].x - row[1].y - row[2].z, 0));\n  rotate.y = 0.5 * Math.sqrt(Math.max(1 - row[0].x + row[1].y - row[2].z, 0));\n  rotate.z = 0.5 * Math.sqrt(Math.max(1 - row[0].x - row[1].y + row[2].z, 0));\n  rotate.w = 0.5 * Math.sqrt(Math.max(1 + row[0].x + row[1].y + row[2].z, 0));\n\n  // if (row[2].y > row[1].z) rotate[0] = -rotate[0];\n  // if (row[0].z > row[2].x) rotate[1] = -rotate[1];\n  // if (row[1].x > row[0].y) rotate[2] = -rotate[2];\n\n  // FROM MORF.JS\n  rotate.y = Math.asin(-row[0].z);\n  if (Math.cos(rotate.y) != 0) {\n    rotate.x = Math.atan2(row[1].z, row[2].z);\n    rotate.z = Math.atan2(row[0].y, row[0].x);\n  } else {\n    rotate.x = Math.atan2(-row[2].x, row[1].y);\n    rotate.z = 0;\n  }\n\n  // FROM http://blog.bwhiting.co.uk/?p=26\n  // scale.x2 = Math.sqrt(matrix.m11*matrix.m11 + matrix.m21*matrix.m21 + matrix.m31*matrix.m31);\n  // scale.y2 = Math.sqrt(matrix.m12*matrix.m12 + matrix.m22*matrix.m22 + matrix.m32*matrix.m32);\n  // scale.z2 = Math.sqrt(matrix.m13*matrix.m13 + matrix.m23*matrix.m23 + matrix.m33*matrix.m33);\n\n  // rotate.x2 = Math.atan2(matrix.m23/scale.z2, matrix.m33/scale.z2);\n  // rotate.y2 = -Math.asin(matrix.m13/scale.z2);\n  // rotate.z2 = Math.atan2(matrix.m12/scale.y2, matrix.m11/scale.x2);\n\n  return {\n    perspective : perspective,\n    translate   : translate,\n    skew        : skew,\n    scale       : scale,\n    rotate      : rotate\n  };\n}\n",
    "module.exports = {\n  length           : length,\n  normalize        : normalize,\n  dot              : dot,\n  cross            : cross,\n  combine          : combine,\n  multiplyByMatrix : multiplyByMatrix\n};\n\n/**\n * Get the length of the vector\n * @author Joe Lambert\n * @returns {float}\n */\n\nfunction length(vector) {\n  return Math.sqrt(vector.x*vector.x + vector.y*vector.y + vector.z*vector.z);\n}\n\n\n/**\n * Get a normalized representation of the vector\n * @author Joe Lambert\n * @returns {Vector4}\n */\n\nfunction normalize(vector) {\n  var len = length(vector),\n    v = new vector.constructor(vector.x / len, vector.y / len, vector.z / len);\n\n  return v;\n}\n\n\n/**\n * Vector Dot-Product\n * @param {Vector4} v The second vector to apply the product to\n * @author Joe Lambert\n * @returns {float} The Dot-Product of a and b.\n */\n\nfunction dot(a, b) {\n  return a.x*b.x + a.y*b.y + a.z*b.z + a.w*b.w;\n}\n\n\n/**\n * Vector Cross-Product\n * @param {Vector4} v The second vector to apply the product to\n * @author Joe Lambert\n * @returns {Vector4} The Cross-Product of a and b.\n */\n\nfunction cross(a, b) {\n  return new a.constructor(\n    (a.y * b.z) - (a.z * b.y),\n    (a.z * b.x) - (a.x * b.z),\n    (a.x * b.y) - (a.y * b.x)\n  );\n}\n\n\n/**\n * Helper function required for matrix decomposition\n * A Javascript implementation of pseudo code available from http://www.w3.org/TR/css3-2d-transforms/#matrix-decomposition\n * @param {Vector4} aPoint A 3D point\n * @param {float} ascl\n * @param {float} bscl\n * @author Joe Lambert\n * @returns {Vector4}\n */\n\nfunction combine(aPoint, bPoint, ascl, bscl) {\n  return new aPoint.constructor(\n    (ascl * aPoint.x) + (bscl * bPoint.x),\n    (ascl * aPoint.y) + (bscl * bPoint.y),\n    (ascl * aPoint.z) + (bscl * bPoint.z)\n  );\n}\n\nfunction multiplyByMatrix(vector, matrix) {\n  return new vector.constructor(\n    (matrix.m11 * vector.x) + (matrix.m12 * vector.y) + (matrix.m13 * vector.z),\n    (matrix.m21 * vector.x) + (matrix.m22 * vector.y) + (matrix.m23 * vector.z),\n    (matrix.m31 * vector.x) + (matrix.m32 * vector.y) + (matrix.m33 * vector.z)\n  );\n}\n",
    "var utils = require('./utils');\r\n\r\nvar Elem = module.exports = function(elem) {\r\n\r\n    this.elem = elem;\r\n\r\n    // this._computedStyles\r\n\r\n};\r\n\r\nElem.create = function(elem) {\r\n\r\n    return new Elem(elem);\r\n\r\n};\r\n\r\nElem.prototype = {\r\n\r\n    calcBase: function(to) {\r\n\r\n        var from = {},\r\n            computedStyles = this._computedStyles = utils.getComputedStyle(this.elem);\r\n\r\n        for (var property in to) {\r\n\r\n            from[property] = computedStyles[property];\r\n\r\n        }\r\n\r\n        return from;\r\n\r\n    },\r\n\r\n    calcMatrix: function() {\r\n\r\n        return utils.getComputedMatrix(this._computedStyles || utils.getComputedStyle(this.elem));\r\n\r\n    }\r\n};",
    "var WebMatrix = require('xcssmatrix'),\r\n\r\n    transform = require('../transform-prop');\r\n\r\nmodule.exports = {\r\n\r\n    getComputedMatrix: function(computedStyles) {\r\n\r\n        return new WebMatrix(computedStyles[transform]);\r\n\r\n    },\r\n\r\n    getComputedStyle: function(elem) {\r\n\r\n        return document.defaultView.getComputedStyle(elem);\r\n\r\n    }\r\n\r\n};",
    "module.exports = function(m) {\r\n\r\n    var result = {};\r\n\r\n    result.translation = {\r\n\r\n        x: m.m41,\r\n        y: m.m42,\r\n        z: m.m43\r\n\r\n    };\r\n\r\n    result.scale = {\r\n\r\n        x: Math.sqrt(m.m11 * m.m11 + m.m12 * m.m12 + m.m13 * m.m13),\r\n        y: Math.sqrt(m.m21 * m.m21 + m.m22 * m.m22 + m.m23 * m.m23),\r\n        z: Math.sqrt(m.m31 * m.m31 + m.m32 * m.m32 + m.m33 * m.m33)\r\n\r\n    };\r\n\r\n    result.rotation = {\r\n\r\n        x: -Math.atan2(m.m32 / result.scale.z, m.m33 / result.scale.z),\r\n        y: Math.asin(m.m31 / result.scale.z),\r\n        z: -Math.atan2(m.m21 / result.scale.y, m.m11 / result.scale.x)\r\n\r\n    };\r\n\r\n    return result;\r\n\r\n};",
    "var PI_180 = Math.PI * 180,\r\n\r\n\tWebMatrix = require('xcssmatrix'),\r\n\r\n\temptyMatrix = new WebMatrix(),\r\n\r\n\tdecomposeWebMatrix = require('./decompose');\r\n\r\nvar Matrix = module.exports = function Matrix(matrix) {\r\n\r\n\tif (matrix instanceof WebMatrix) {\r\n\r\n\t\t// Webmatrix\r\n\t\tthis.from(decomposeWebMatrix(matrix));\r\n\r\n\t}\r\n\r\n};\r\n\r\nMatrix.blank = function() {\r\n\r\n\treturn {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tz: 0,\r\n\t\tscaleX: 1,\r\n\t\tscaleY: 1,\r\n\t\tscaleZ: 1,\r\n\t\trotationX: 0,\r\n\t\trotationY: 0,\r\n\t\trotationZ: 0\r\n\t};\r\n\r\n};\r\n\r\nMatrix.prototype = {\r\n\r\n\t// Bit of bloat, but faster\r\n\t// setting of private vars than\r\n\t// defineProperty... this leaves us\r\n\t// with XCSSMATRIX being the biggest\r\n\t// slowdown when it comes to property\r\n\t// access.\r\n\r\n\tsetX: function(value) {\r\n\t\treturn (this._x = (value || 0));\r\n\t},\r\n\r\n\tsetY: function(value) {\r\n\t\treturn (this._y = (value || 0));\r\n\t},\r\n\r\n\tsetZ: function(value) {\r\n\t\treturn (this._z = (value || 0));\r\n\t},\r\n\r\n\tsetScaleX: function(value) {\r\n\t\treturn (this._scaleX = (value || 0));\r\n\t},\r\n\r\n\tsetScaleY: function(value) {\r\n\t\treturn (this._scaleY = (value || 0));\r\n\t},\r\n\r\n\tsetScaleZ: function(value) {\r\n\t\treturn (this._scaleZ = (value || 0));\r\n\t},\r\n\r\n\tsetScale: function(value) {\r\n\t\treturn (this._scaleX = this._scaleY = (value || 0));\r\n\t},\r\n\r\n\tsetRotationX: function(value) {\r\n\t\treturn (this._rotationX = (value || 0));\r\n\t},\r\n\r\n\tsetRotationY: function(value) {\r\n\t\treturn (this._rotationY = (value || 0));\r\n\t},\r\n\r\n\tsetRotationZ: function(value) {\r\n\t\treturn (this._rotationZ = (value || 0));\r\n\t},\r\n\r\n\tsetRotation: function(value) {\r\n\t\treturn (this.rotationZ = (value || 0));\r\n\t},\r\n\r\n\ttranspose: function(obj) {\r\n\r\n\t\tif (!obj) { return; }\r\n\r\n\t\tfor (var property in obj) {\r\n\t\t\tthis[property] = obj[property];\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tfrom: function(fromMatrix) {\r\n\r\n\t\tvar matrix = this;\r\n\t\tmatrix._x         = fromMatrix.translation.x;\r\n\t\tmatrix._y         = fromMatrix.translation.y;\r\n\t\tmatrix._z         = fromMatrix.translation.z;\r\n\t\tmatrix._scaleX    = fromMatrix.scale.x;\r\n\t\tmatrix._scaleY    = fromMatrix.scale.y;\r\n\t\tmatrix._scaleZ    = fromMatrix.scale.z;\r\n\t\tmatrix._rotationX = fromMatrix.rotation.x / PI_180;\r\n\t\tmatrix._rotationY = fromMatrix.rotation.y / PI_180;\r\n\t\tmatrix._rotationZ = fromMatrix.rotation.z / PI_180;\r\n\r\n\t},\r\n\r\n\tupdate: function() {\r\n\r\n\t\tvar matrix = this,\r\n\t\t\tnewMatrix = emptyMatrix;\r\n\t\tnewMatrix = newMatrix.translate(matrix._x, matrix._y, matrix._z);\r\n\t\tnewMatrix = newMatrix.rotate(matrix._rotationX, matrix._rotationY, matrix._rotationZ);\r\n\t\tnewMatrix = newMatrix.scale(matrix._scaleX, matrix._scaleY, matrix._scaleZ);\r\n\r\n\t\treturn newMatrix;\r\n\r\n\t},\r\n\r\n\ttoObject: function() {\r\n\r\n\t\tvar matrix = this,\r\n\t\t\tm = this._m || (this._m = {});\r\n\t\tm.x         = matrix._x;\r\n\t\tm.y         = matrix._y;\r\n\t\tm.z         = matrix._z;\r\n\t\tm.scaleX    = matrix._scaleX;\r\n\t\tm.scaleY    = matrix._scaleY;\r\n\t\tm.scaleZ    = matrix._scaleZ;\r\n\t\tm.rotationX = matrix._rotationX;\r\n\t\tm.rotationY = matrix._rotationY;\r\n\t\tm.rotationZ = matrix._rotationZ;\r\n\r\n\t\treturn m;\r\n\r\n\t}\r\n\r\n};",
    "var _      = require('../utils'),\n\n\tloop   = require('../loop'),\n\n\tElem   = require('../Elem'),\n\n\tMatrix = require('../transformers/Matrix'),\n\tObj    = require('../transformers/Obj');\n\nvar Animation = function(obj) {\n\n\tvar hasElem = _.isElement(obj);\n\tthis.obj         = hasElem ? Obj.create() : Obj.create(obj);\n\tthis._elem        = hasElem ? Elem.create(obj) : null;\n\tthis.elem         = hasElem ? obj : null;\n\tthis.matrix       = Matrix.create();\n\tthis.playing      = false;\n\tthis._startTime   = 0;\n\tthis._delayTime   = 0;\n\tthis._events      = {};\n\n\tvar self = this;\n\tthis.transform = {\n\t\tfrom: function(from) {\n\n\t\t\tself.matrix.setFrom(from);\n\n\t\t\treturn self;\n\n\t\t},\n\t\tto: function(to) {\n\n\t\t\tself.matrix.setTo(to);\n\n\t\t\treturn self;\n\n\t\t}\n\t};\n};\n\nAnimation.prototype = {\n\n\ton: function(name, fn) {\n\n\t\tvar arr = this._events[name] || (this._events[name] = []);\n\t\tarr.push(fn);\n\t\treturn this;\n\n\t},\n\n\toff: function(name, fn) {\n\n\t\tvar arr = this._events[name];\n\t\tif (!arr || !arr.length) { return this; }\n\n\t\tvar idx = arr.indexOf(fn);\n\t\tif (idx !== -1) {\n\n\t\t\tanimations.splice(idx, 1);\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttrigger: function(name, a, b) {\n\n\t\tvar arr = this._events[name];\n\t\tif (!arr || !arr.length) { return this; }\n\n\t\tvar idx = 0, length = arr.length;\n\t\tfor (; idx < length; idx++) {\n\n\t\t\tarr[idx](a, b);\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdelay: function(amount) {\n\n\t\tthis._delayTime = amount;\n\t\treturn this;\n\n\t},\n\n\trepeat: function(repeat) {\n\n\t\tthis._animation.repeat(repeat);\n\t\treturn this;\n\n\t},\n\n\tyoyo: function(yoyo) {\n\n\t\tif (!arguments.length) { yoyo = true; }\n\t\tthis.obj.yoyo = this.matrix.yoyo = !!yoyo;\n\t\treturn this;\n\n\t},\n\n\tto: function(to) {\n\n\t\tthis.obj.setTo(to);\n\t\treturn this;\n\n\t},\n\n\tfrom: function(from) {\n\n\t\tthis.obj.setFrom(from);\n\t\treturn this;\n\n\t},\n\n\tstart: function(time) {\n\n\t\tthis._startTime = time || loop.now;\n\n\t\tvar self = this;\n\t\tloop.await(function(time) {\n\n\t\t\tvar shouldContinueToWait;\n\n\t\t\tif (time < (self._startTime + self._delayTime)) {\n\n\t\t\t\treturn (shouldContinueToWait = true);\n\n\t\t\t}\n\n\t\t\tself.trigger('start');\n\n\t\t\tself.playing = true;\n\n\t\t\tself._resolveToFrom();\n\n\t\t\tself._start(time);\n\n\t\t\treturn (shouldContinueToWait = false);\n\n\t\t});\n\n\t\treturn this;\n\n\t},\n\n\t_resolveToFrom: function() {\n\n\t\tif (!this._elem) { return; }\n\n\t\tif (!this.obj.base) {\n\n\t\t\tthis.obj.setFrom(\n\t\t\t\tthis._elem.calcBase(this.obj.to)\n\t\t\t);\n\n\t\t}\n\n\t\tif (this.matrix.to) {\n\n\t\t\tthis.matrix.setMatrix(this._elem.calcMatrix());\n\n\t\t}\n\n\t},\n\n\tpause: function(time) {\n\n\t\ttime = time || loop.now;\n\t\tthis._animation.pause(time);\n\t\treturn this;\n\n\t},\n\n\tresume: function(time) {\n\n\t\ttime = time || loop.now;\n\t\tthis._animation.resume(time);\n\t\treturn this;\n\n\t},\n\n\tstop: function() {\n\n\t\tif (!this.playing) { return this; }\n\n\t\tthis.playing = false;\n\n\t\tloop.remove(this._animation);\n\n\t\tthis._animation.stop();\n\n\t\tthis.trigger('stop');\n\n\t\treturn this;\n\t}\n\n\t// Implemented by the inheritor\n\t// _start: function() {}\n};\n\nmodule.exports = Animation;",
    "var _ = require('../utils'),\n\n\tloop = require('../loop'),\n\n\tAnimator = require('./Animator'),\n\n\tSpring = require('./animations/Spring');\n\nvar FluxSpring = module.exports =function(obj) {\n\tAnimator.call(this, obj);\n\n\tthis._animation = Spring.create();\n};\n\nFluxSpring.create = function(obj) {\n\n\treturn new FluxSpring(obj);\n\n};\n\n_.extend(FluxSpring.prototype, Animator.prototype, {\n\n\tset: function(tension, friction, velocity) {\n\n\t\t// It's an object\n\t\tif (!_.isNumber(tension)) {\n\t\t\tvar temp = tension;\n\t\t\tvelocity = temp.velocity;\n\t\t\tfriction = temp.friction;\n\t\t\ttension = temp.tension;\n\t\t}\n\n\t\tthis._animation.set(tension, friction, velocity);\n\n\t\treturn this;\n\n\t},\n\n\ttension: function(tension) {\n\n\t\tthis._animation.tension = +tension;\n\n\t\treturn this;\n\n\t},\n\n\tfriction: function(friction) {\n\n\t\tthis._animation.friction = +friction;\n\n\t\treturn this;\n\n\t},\n\n\tvelocity: function(velocity) {\n\n\t\tthis._animation.velocity = +velocity;\n\n\t\treturn this;\n\n\t},\n\n\t_start: function() {\n\n\t\tvar self = this;\n\t\tthis._animation\n\t\t\t.registerCallbacks({\n\n\t\t\t\tonUpdate: function(perc) {\n\n\t\t\t\t\tself.obj.update(perc);\n\t\t\t\t\tself.matrix.update(perc);\n\n\t\t\t\t\tself.trigger('update', self.obj.base, self);\n\n\t\t\t\t},\n\n\t\t\t\tonReverse: function() {\n\n\t\t\t\t\tself.obj.reverse();\n\t\t\t\t\tself.matrix.reverse();\n\n\t\t\t\t},\n\n\t\t\t\tonComplete: function() {\n\n\t\t\t\t\tself.stop().trigger('complete');\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tself.obj.start();\n\t\tself.matrix.start();\n\n\t\tloop.add(self._animation);\n\n\t}\n});",
    "var _ = require('../utils'),\n\n\tloop = require('../loop'),\n\n\tAnimator = require('./Animator'),\n\n\teasing = require('../easing'),\n\n\tTween = require('./animations/Tween');\n\nvar FluxTween = module.exports = function(obj) {\n\tAnimator.call(this, obj);\n\n\tthis._animation = Tween.create();\n\n};\n\nFluxTween.create = function(obj) {\n\n\treturn new FluxTween(obj);\n\n};\n\n_.extend(FluxTween.prototype, Animator.prototype, {\n\n\tfrom: function(obj) {\n\n\t\tthis.obj.from(obj);\n\t\treturn this;\n\n\t},\n\n\tduration: function(duration) {\n\n\t\tthis._animation.duration(+duration);\n\t\treturn this;\n\n\t},\n\n\tease: function(fn) {\n\n\t\tthis._animation.ease(fn || easing.linear.none);\n\t\treturn this;\n\n\t},\n\n\t_start: function() {\n\n\t\tvar self = this;\n\t\tthis._animation\n\t\t\t.registerCallbacks({\n\n\t\t\t\tonUpdate: function(perc) {\n\n\t\t\t\t\tself.obj.update(perc);\n\t\t\t\t\tself.matrix.update(perc);\n\n\t\t\t\t\tself.trigger('update', self.obj.base, self);\n\n\t\t\t\t},\n\n\t\t\t\tonComplete: function() {\n\n\t\t\t\t\tself.stop().trigger('complete');\n\n\t\t\t\t},\n\n\t\t\t\tonReverse: function() {\n\n\t\t\t\t\tself.obj.reverse();\n\t\t\t\t\tself.matrix.reverse();\n\n\t\t\t\t}\n\n\t\t\t})\n\t\t\t.startTime(loop.now);\n\n\t\tself.obj.start();\n\t\tself.matrix.start();\n\t\tloop.add(self._animation);\n\n\t}\n\n});",
    "var END_VALUE = 100,\n\tTOLERANCE = 0.01,\n\tSPEED     = 1 / 60,\n\n\tcalcSpringAcceleration = function(tension, x, friction, velocity) {\n\n\t\treturn -tension * x - friction * velocity;\n\n\t},\n\n\tspringCalculateState = function(state, speed) {\n\n\t\tvar dt = speed * 0.5,\n\t\t\tvelocity = state.velocity,\n\t\t\ttension  = state.tension,\n\t\t\tfriction = state.friction,\n\n\t\t\ta_dx = velocity,\n\t\t\ta_dv = calcSpringAcceleration(tension, state.x, friction, velocity),\n\n\t\t\tb_dx = velocity + a_dv * dt,\n\t\t\tb_end_x = state.x + a_dx * dt,\n\t\t\tb_dv = calcSpringAcceleration(tension, b_end_x, friction, b_dx),\n\n\t\t\tc_dx = velocity + b_dv * dt,\n\t\t\tc_end_x = state.x + b_dx * dt,\n\t\t\tc_dv = calcSpringAcceleration(tension, c_end_x, friction, c_dx),\n\n\t\t\td_dx = velocity + c_dv * dt,\n\t\t\td_end_x = state.x + c_dx * dt,\n\t\t\td_dv = calcSpringAcceleration(tension, d_end_x, friction, d_dx),\n\n\t\t\tdxdt = (1 / 6) * (a_dx + 2 * (b_dx + c_dx) + d_dx),\n\t\t\tdvdt = (1 / 6) * (a_dv + 2 * (b_dv + c_dv) + d_dv);\n\n\t\tstate.x        = state.x + dxdt * speed;\n\t\tstate.velocity = a_dx + dvdt * speed;\n\n\t\treturn state;\n\n\t};\n\nvar Spring = module.exports = function Spring() {\n\n\tvar spring = this;\n\tspring._repeat           = 0;\n\tspring.velocity          = 0;\n\tspring._originalVelocity = 0;\n\tspring.tension           = 80;\n\tspring._originalTension  = 80;\n\tspring.friction          = 8;\n\tspring._originalFriction = 8;\n\tspring._value            = 0;\n\n\tspring._isPaused         = false;\n\n\t// Stores x and velocity to do\n\t// calculations against so that\n\t// we can have multiple return\n\t// values from springCalculateState\n\tspring._state = {};\n\n};\n\nSpring.create = function() {\n\treturn new Spring();\n};\n\nSpring.prototype = {\n\n\tregisterCallbacks: function(obj) {\n\n\t\tvar spring = this;\n\t\tspring._updateCallback   = obj.onUpdate;\n\t\tspring._completeCallback = obj.onComplete;\n\t\tspring._reverseCallback  = obj.onReverse;\n\t\treturn spring;\n\n\t},\n\n\trepeat: function(times) {\n\n\t\tvar spring = this;\n\t\tspring._repeat = times;\n\t\treturn spring;\n\n\t},\n\n\tset: function(tension, friction, velocity) {\n\n\t\tvar spring = this;\n\t\tif (velocity !== undefined) { spring.velocity = spring._originalVelocity = velocity; }\n\t\tif (tension  !== undefined) { spring.tension  = spring._originalTension  = tension;  }\n\t\tif (friction !== undefined) { spring.friction = spring._originalFriction = friction; }\n\t\treturn spring;\n\n\t},\n\n\ttension: function(tension) {\n\n\t\tvar spring = this;\n\t\tspring.tension = spring._originalTension = tension;\n\t\treturn spring;\n\n\t},\n\n\tfriction: function(friction) {\n\n\t\tvar spring = this;\n\t\tspring.friction = spring._originalFriction = friction;\n\t\treturn spring;\n\n\t},\n\n\tvelocity: function(velocity) {\n\n\t\tvar spring = this;\n\t\tspring.velocity = spring._originalVelocity = velocity;\n\t\treturn spring;\n\n\t},\n\n\tpause: function() {\n\n\t\tthis._isPaused = true;\n\t\treturn this;\n\n\t},\n\n\tresume: function() {\n\n\t\tthis._isPaused = false;\n\t\treturn this;\n\n\t},\n\n\tstep: function() {\n\t\tvar shouldStepAgain;\n\n\t\tif (this._isPaused) { return (shouldStepAgain = true); }\n\n\t\tvar spring = this,\n\t\t\tstateBefore = spring._state;\n\n\t\tstateBefore.x        = spring._value - END_VALUE;\n\t\tstateBefore.velocity = spring.velocity;\n\t\tstateBefore.tension  = spring.tension;\n\t\tstateBefore.friction = spring.friction;\n\n\t\tvar stateAfter       = springCalculateState(stateBefore, SPEED),\n\t\t\tfinalVelocity    = stateAfter.velocity,\n\t\t\tnetFloat         = stateAfter.x,\n\t\t\tnet1DVelocity    = stateAfter.velocity,\n\t\t\tnetValueIsLow    = Math.abs(netFloat) < TOLERANCE,\n\t\t\tnetVelocityIsLow = Math.abs(net1DVelocity) < TOLERANCE,\n\t\t\tshouldSpringStop = netValueIsLow || netVelocityIsLow;\n\n\t\tspring._value = END_VALUE + stateAfter.x;\n\n\t\tif (shouldSpringStop) {\n\n\t\t\tspring.velocity = finalVelocity = 0;\n\t\t\tspring._value = END_VALUE;\n\n\t\t\tspring._updateCallback(spring._value / 100);\n\n\t\t\t// Should we repeat?\n\t\t\tif (spring._repeat > 0) {\n\n\t\t\t\t// Decrement the repeat counter (if finite,\n\t\t\t\t// we may be in an infinite loop)\n\t\t\t\tif (isFinite(spring._repeat)) { spring._repeat--; }\n\n\t\t\t\tspring._reverseCallback();\n\t\t\t\tspring.velocity = spring._originalVelocity;\n\t\t\t\tspring.tension  = spring._originalTension;\n\t\t\t\tspring.friction = spring._originalFriction;\n\t\t\t\tspring._value = 0;\n\n\t\t\t\treturn (shouldStepAgain = true);\n\n\t\t\t}\n\n\t\t\t// Otherwise, we're done repeating\n\t\t\tspring._completeCallback();\n\n\t\t\treturn (shouldStepAgain = false);\n\n\t\t}\n\n\t\tspring.velocity = finalVelocity;\n\t\tspring._updateCallback(spring._value / 100);\n\t\treturn (shouldStepAgain = true);\n\n\t},\n\n\tstop: function() {\n\n\t\tvar spring = this;\n\t\tspring.velocity = spring._originalVelocity;\n\t\tspring.tension  = spring._originalTension;\n\t\tspring.friction = spring._originalFriction;\n\t\tspring._value = 0;\n\n\t}\n};",
    "var _ = require('../../utils'),\n\n\teasing = require('../../easing');\n\nvar Tween = module.exports = function Tween() {\n\n\tvar tween = this;\n\ttween._duration           = 1000;\n\ttween._repeat             = 0;\n\ttween._startTime          = 0;\n\ttween._isPaused           = false;\n\ttween._easingFunction     = easing.linear.none;\n\n\ttween.step = tween.step.bind(tween);\n\n};\n\nTween.create = function() {\n\treturn new Tween();\n};\n\nTween.prototype = {\n\n\tregisterCallbacks: function(obj) {\n\n\t\tvar tween = this;\n\t\ttween._updateCallback   = obj.onUpdate;\n\t\ttween._completeCallback = obj.onComplete;\n\t\ttween._reverseCallback  = obj.onReverse;\n\t\treturn tween;\n\n\t},\n\n\tstartTime: function(time) {\n\n\t\tvar tween = this;\n\t\ttween._startTime = time;\n\t\treturn tween;\n\n\t},\n\n\tduration: function(duration) {\n\n\t\tvar tween = this;\n\t\ttween._duration = duration;\n\t\treturn tween;\n\n\t},\n\n\trepeat: function(times) {\n\n\t\tvar tween = this;\n\t\ttween._repeat = times;\n\t\treturn tween;\n\n\t},\n\n\tease: function(easing) {\n\n\t\tvar tween = this;\n\t\ttween._easingFunction = easing;\n\t\treturn tween;\n\n\t},\n\n\tpause: function(time) {\n\n\t\tthis._isPaused = true;\n\t\tthis._pauseTime = time;\n\t\treturn this;\n\n\t},\n\n\tresume: function(time) {\n\n\t\tif (!this._isPaused || !this._pauseTime) { return this; }\n\n\t\tvar delay = time - this._pauseTime;\n\t\tthis._startTime += delay;\n\n\t\tthis._pauseTime = null;\n\t\tthis._isPaused = false;\n\n\t\treturn this;\n\n\t},\n\n\tstep: function(time) {\n\t\tvar shouldStepAgain;\n\n\t\tif (this._isPaused) { return (shouldStepAgain = true); }\n\n\t\tvar elapsedUncapped = (time - this._startTime) / this._duration,\n\t\t\telapsed         = elapsedUncapped > 1 ? 1 : elapsedUncapped;\n\n\t\tthis._updateCallback(this._easingFunction(elapsed));\n\n\t\t// We have ellapsed tween loop\n\t\tif (elapsed === 1) {\n\n\t\t\t// Should we repeat?\n\t\t\tif (this._repeat > 0) {\n\n\t\t\t\t// Decrement the repeat counter (if finite,\n\t\t\t\t// we may be in an infinite loop)\n\t\t\t\tif (isFinite(this._repeat)) { this._repeat--; }\n\n\t\t\t\tthis._reverseCallback();\n\t\t\t\tthis._startTime = time;\n\n\t\t\t\treturn (shouldStepAgain = true);\n\n\t\t\t}\n\n\t\t\t// Otherwise, we're done repeating\n\t\t\tthis._completeCallback();\n\n\t\t\treturn (shouldStepAgain = false);\n\n\t\t}\n\n\t\treturn (shouldStepAgain = true);\n\n\t},\n\n\tstop: _.noop\n};",
    "// from the amazing sole\n// https://github.com/sole/tween.js/\n\nvar PI = Math.PI,\n\tHALF_PI = PI / 2;\n\nvar linearNone = function(k) {\n\n\t\treturn k;\n\n\t},\n\n\tquadraticIn = function(k) {\n\n\t\treturn k * k;\n\n\t},\n\n\tquadraticOut = function(k) {\n\n\t\treturn k * (2 - k);\n\n\t},\n\n\tquadraticInOut = function(k) {\n\n\t\tif ((k *= 2) < 1) { return 0.5 * k * k; }\n\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t},\n\n\tcubicIn = function(k) {\n\n\t\treturn k * k * k;\n\n\t},\n\n\tcubicOut = function(k) {\n\n\t\treturn --k * k * k + 1;\n\n\t},\n\n\tcubicInOut = function(k) {\n\n\t\tif ((k *= 2) < 1) { return 0.5 * k * k * k; }\n\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t},\n\n\tquarticIn = function(k) {\n\n\t\treturn k * k * k * k;\n\n\t},\n\n\tquarticOut = function(k) {\n\n\t\treturn 1 - (--k * k * k * k);\n\n\t},\n\n\tquarticInOut = function(k) {\n\n\t\tif ((k *= 2) < 1) { return 0.5 * k * k * k * k; }\n\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t},\n\n\tquinticIn = function(k) {\n\n\t\treturn k * k * k * k * k;\n\n\t},\n\n\tquinticOut = function(k) {\n\n\t\treturn --k * k * k * k * k + 1;\n\n\t},\n\n\tquinticInOut = function(k) {\n\n\t\tif ((k *= 2) < 1) { return 0.5 * k * k * k * k * k; }\n\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t},\n\n\tsinusoidalIn = function(k) {\n\n\t\treturn 1 - Math.cos(k * HALF_PI);\n\n\t},\n\n\tsinusoidalOut = function(k) {\n\n\t\treturn Math.sin(k * HALF_PI);\n\n\t},\n\n\tsinusoidalInOut = function(k) {\n\n\t\treturn 0.5 * (1 - Math.cos(PI * k));\n\n\t},\n\n\texponentialIn = function(k) {\n\n\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t},\n\n\texponentialOut = function(k) {\n\n\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t},\n\n\texponentialInOut = function(k) {\n\n\t\tif (k === 0) { return 0; }\n\t\tif (k === 1) { return 1; }\n\t\tif ((k *= 2) < 1) { return 0.5 * Math.pow(1024, k - 1); }\n\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t},\n\n\tcircularIn = function(k) {\n\n\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t},\n\n\tcircularOut = function(k) {\n\n\t\treturn Math.sqrt(1 - (--k * k));\n\n\t},\n\n\tcircularInOut = function(k) {\n\n\t\tif ((k *= 2) < 1) { return - 0.5 * (Math.sqrt(1 - k * k) - 1); }\n\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t},\n\n\telasticIn = function(k) {\n\n\t\tvar s, a = 0.1, p = 0.4;\n\t\tif (k === 0) { return 0; }\n\t\tif (k === 1) { return 1; }\n\t\tif (!a || a < 1) {\n\t\t\ta = 1; s = p / 4;\n\t\t} else {\n\t\t\ts = p * Math.asin(1 / a) / (2 * PI);\n\t\t}\n\t\treturn - (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * PI) / p));\n\n\t},\n\n\telasticOut = function(k) {\n\n\t\tvar s, a = 0.1, p = 0.4;\n\t\tif (k === 0) { return 0; }\n\t\tif (k === 1) { return 1; }\n\t\tif (!a || a < 1) {\n\t\t\ta = 1; s = p / 4;\n\t\t} else {\n\t\t\t s = p * Math.asin(1 / a) / (2 * PI);\n\t\t}\n\t\treturn (a * Math.pow(2, - 10 * k) * Math.sin((k - s) * (2 * PI) / p) + 1);\n\n\t},\n\n\telasticInOut = function(k) {\n\n\t\tvar s, a = 0.1, p = 0.4;\n\t\tif (k === 0) { return 0; }\n\t\tif (k === 1) { return 1; }\n\t\tif (!a || a < 1) {\n\t\t\ta = 1; s = p / 4;\n\t\t} else {\n\t\t\ts = p * Math.asin(1 / a) / (2 * PI);\n\t\t}\n\t\tif ((k *= 2) < 1) { return - 0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * PI) / p)); }\n\t\treturn a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * PI) / p) * 0.5 + 1;\n\n\t},\n\n\tbackIn = function(k) {\n\n\t\tvar s = 1.70158;\n\t\treturn k * k * ((s + 1) * k - s);\n\n\t},\n\n\tbackOut = function(k) {\n\n\t\tvar s = 1.70158;\n\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t},\n\n\tbackInOut = function(k) {\n\n\t\tvar s = 1.70158 * 1.525;\n\t\tif ((k *= 2) < 1) { return 0.5 * (k * k * ((s + 1) * k - s)); }\n\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t},\n\n\tbounceIn = function(k) {\n\n\t\treturn 1 - bounceOut(1 - k);\n\n\t},\n\n\tbounceOut = function(k) {\n\n\t\tif (k < (1 / 2.75)) {\n\n\t\t\treturn 7.5625 * k * k;\n\n\t\t} else if (k < (2 / 2.75)) {\n\n\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\n\t\t} else if (k < (2.5 / 2.75)) {\n\n\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\n\t\t} else {\n\n\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\n\t\t}\n\n\t},\n\n\tbounceInOut = function(k) {\n\n\t\tif (k < 0.5) { return bounceIn(k * 2) * 0.5; }\n\t\treturn bounceOut(k * 2 - 1) * 0.5 + 0.5;\n\n\t};\n\nmodule.exports = {\n\n\tlinear: {\n\n\t\tnone: linearNone\n\n\t},\n\n\tquadratic: {\n\n\t\tin: quadraticIn,\n\n\t\tout: quadraticOut,\n\n\t\tinOut: quadraticInOut\n\n\t},\n\n\tcubic: {\n\n\t\tin: cubicIn,\n\n\t\tout: cubicOut,\n\n\t\tinOut: cubicInOut\n\n\t},\n\n\tquartic: {\n\n\t\tin: quarticIn,\n\n\t\tout: quarticOut,\n\n\t\tinOut: quarticInOut\n\n\t},\n\n\tquintic: {\n\n\t\tin: quinticIn,\n\n\t\tout: quinticOut,\n\n\t\tinOut: quinticInOut\n\n\t},\n\n\tsinusoidal: {\n\n\t\tin: sinusoidalIn,\n\n\t\tout: sinusoidalOut,\n\n\t\tinOut: sinusoidalInOut\n\n\t},\n\n\texponential: {\n\n\t\tin: exponentialIn,\n\n\t\tout: exponentialOut,\n\n\t\tinOut: exponentialInOut\n\n\t},\n\n\tcircular: {\n\n\t\tin: circularIn,\n\n\t\tout: circularOut,\n\n\t\tinOut: circularInOut\n\n\t},\n\n\telastic: {\n\n\t\tin: elasticIn,\n\n\t\tout: elasticOut,\n\n\t\tinOut: elasticInOut\n\n\t},\n\n\tback: {\n\n\t\tin: backIn,\n\n\t\tout: backOut,\n\n\t\tinOut: backInOut,\n\n\t},\n\n\tbounce: {\n\n\t\tin: bounceIn,\n\n\t\tout: bounceOut,\n\n\t\tinOut: bounceInOut\n\n\t}\n\n};\n",
    "var _          = require('./utils'),\n\twaiting    = [],\n\tanimations = [];\n\nvar loop = module.exports = {\n\tnow: 0,\n\n\tawait: function(fn) {\n\n\t\twaiting.push(fn);\n\n\t},\n\n\tadd: function(fn) {\n\n\t\tanimations.push(fn);\n\n\t},\n\n\tremove: function(fn) {\n\n\t\tvar idx = animations.indexOf(fn);\n\t\tif (idx !== -1) {\n\n\t\t\tanimations.splice(idx, 1);\n\n\t\t}\n\n\t},\n\n\tupdate: function(time) {\n\n\t\ttime = loop.now = time || Date.now();\n\n\t\tif (waiting.length === 0 && animations.length === 0) { return; }\n\n\t\tvar idx = 0;\n\t\twhile (idx < waiting.length) {\n\n\t\t\tif (waiting[idx](time)) {\n\n\t\t\t\tidx++;\n\n\t\t\t} else {\n\n\t\t\t\twaiting.splice(idx, 1);\n\n\t\t\t}\n\n\t\t}\n\n\t\tidx = 0;\n\t\twhile (idx < animations.length) {\n\n\t\t\tanimations[idx].step(time);\n\t\t\tidx++;\n\n\t\t}\n\n\t}\n};",
    "var div = document.createElement('div'),\n\n\tselectProp = function(arr) {\n\t\tvar idx = arr.length;\n\t\twhile (idx--) {\n\t\t\tif (div.style[arr[idx]] !== undefined) {\n\t\t\t\treturn arr[idx];\n\t\t\t}\n\t\t}\n\t};\n\nmodule.exports = selectProp([\n\t'transform',\n\t'msTransform',\n\t'oTransform',\n\t'mozTransform',\n\t'webkitTransform'\n]) || '';\n\ndiv = null;",
    "/*\r\n    var MATRIX = {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        scaleZ: 1,\r\n        rotationX: 0,\r\n        rotationY: 0,\r\n        rotationZ: 0\r\n    };\r\n*/\r\n\r\nvar expand = function(obj) {\r\n    if (obj.scale !== undefined) {\r\n\r\n        obj.scaleX = obj.scale;\r\n        obj.scaleY = obj.scale;\r\n        delete obj.scale;\r\n\r\n    }\r\n\r\n    if (obj.rotation !== undefined) {\r\n\r\n        obj.rotationZ = obj.rotation;\r\n        delete obj.rotation;\r\n\r\n    }\r\n\r\n    if (obj.rotate !== undefined) {\r\n\r\n        obj.rotationZ = obj.rotate;\r\n        delete obj.rotate;\r\n\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nmodule.exports = function(obj) {\r\n\r\n    if (!obj) { return obj; }\r\n\r\n    return expand(obj);\r\n\r\n};",
    "var _ = require('../../utils'),\r\n\r\n    M = require('../../Matrix'),\r\n\r\n    expandShorthand = require('./expand-shorthand'),\r\n\r\n    Obj = require('../Obj'),\r\n\r\n    setters = {\r\n        x: 'setX',\r\n        y: 'setY',\r\n        z: 'setZ',\r\n        scale: 'setScale',\r\n        scaleX: 'setScaleX',\r\n        scaleY: 'setScaleY',\r\n        scaleZ: 'setScaleZ',\r\n        rotation: 'setRotation',\r\n        rotationX: 'setRotationX',\r\n        rotationY: 'setRotationY',\r\n        rotationZ: 'setRotationZ'\r\n    };\r\n\r\nvar Matrix = module.exports = function() {\r\n\r\n    // this.base;\r\n    // this.from = {};\r\n    // this.to   = {};\r\n\r\n    // this.yoyo  = false;\r\n\r\n    // this._matrix;\r\n\r\n};\r\n\r\nMatrix.create = function(obj) {\r\n\r\n    return new Matrix(obj);\r\n\r\n};\r\n\r\n_.extend(Matrix.prototype, Obj.prototype, {\r\n\r\n    setMatrix: function(matrix) {\r\n\r\n        this._matrix = new M(matrix);\r\n        this.base = this._matrix.toObject();\r\n        return this;\r\n\r\n    },\r\n\r\n    setFrom: function(from) {\r\n\r\n        this.base = expandShorthand(from);\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    setTo: function(to) {\r\n\r\n        this.to = expandShorthand(to);\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    update: function(perc) {\r\n\r\n        if (!this._matrix) { return this; }\r\n\r\n        var property;\r\n\r\n        for (property in this.base) {\r\n\r\n            var start = this.from[property] || 0,\r\n                end = this.to[property];\r\n\r\n            // protect against non numeric properties.\r\n            if (end === +end) {\r\n\r\n                this.base[property] = start + (end - start) * perc;\r\n\r\n            }\r\n\r\n            this._matrix[setters[property]](this.base[property]);\r\n\r\n        }\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    start: function() {\r\n\r\n        if (!this._matrix || ! this.to) { return this; }\r\n\r\n        var base   = this.base || (this.base = {}),\r\n            from   = this.from || (this.from = {}),\r\n            repeat = this._repeat || (this._repeat = {}),\r\n            to     = this.to,\r\n            property;\r\n\r\n        for (property in this.to) {\r\n\r\n            // omit unchanged properties\r\n            if (base[property] === undefined || to[property] === base[property]) {\r\n\r\n                delete to[property];\r\n                continue;\r\n\r\n            }\r\n\r\n            // Ensures we're using numbers, not strings\r\n            from[property] = base[property] *= 1;\r\n\r\n            repeat[property] = from[property] || 0;\r\n        }\r\n\r\n        this._matrix.transpose(this.base);\r\n\r\n        return this;\r\n\r\n    },\r\n\r\n    toString: function() {\r\n\r\n        if (!this._matrix) { return ''; }\r\n\r\n        return this._matrix.update().toString();\r\n\r\n    }\r\n\r\n});",
    "var Obj = module.exports = function(obj) {\n\n\tthis.base = obj;\n\n\t// this.from   = {};\n\t// this._repeat = {};\n\t// this.to     = {};\n\t// this.yoyo    = false;\n\n};\n\nObj.create = function(obj) {\n\n\treturn new Obj(obj);\n\n};\n\nObj.prototype = {\n\n\tsetFrom: function(from) {\n\n\t\tthis.base = from;\n\n\t\treturn this;\n\n\t},\n\n\tsetTo: function(to) {\n\n\t\tthis.to = to;\n\n\t\treturn this;\n\n\t},\n\n\tupdate: function(perc) {\n\n\t\tvar property;\n\n\t\tfor (property in this.to) {\n\n\t\t\tvar start = this.from[property] || 0,\n\t\t\t\tend = this.to[property];\n\n\t\t\t// protect against non numeric properties.\n\t\t\tif (end === +end) {\n\n\t\t\t\tthis.base[property] = start + (end - start) * perc;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\treverse: function() {\n\n\t\tvar property, tmp;\n\n\t\t// reassign starting values\n\t\tfor (property in this._repeat) {\n\n\t\t\tif (this.yoyo) {\n\n\t\t\t\ttmp = this._repeat[property];\n\t\t\t\tthis._repeat[property] = this.to[property];\n\t\t\t\tthis.to[property] = tmp;\n\n\t\t\t}\n\n\t\t\tthis.from[property] = this._repeat[property];\n\n\t\t}\n\n\n\t\treturn this;\n\n\t},\n\n\tstart: function() {\n\n\t\tif (!this.to) { return this; }\n\n\t\tvar base   = this.base || (this.base = {}),\n\t\t\tfrom   = this.from || (this.from = {}),\n\t\t\trepeat = this._repeat || (this._repeat = {}),\n\t\t\tto     = this.to,\n\t\t\tproperty;\n\n\t\tfor (property in this.to) {\n\n\t\t\t// omit unchanged properties\n\t\t\tif (base[property] === undefined || to[property] === base[property]) {\n\n\t\t\t\tdelete to[property];\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Ensures we're using numbers, not strings\n\t\t\tfrom[property] = base[property] *= 1;\n\n\t\t\trepeat[property] = from[property] || 0;\n\t\t}\n\n\n\t\treturn this;\n\n\t}\n\n};",
    "var toString = {}.toString;\n\nmodule.exports = {\n\tnoop: function() {},\n\n\tisArrayLike: function(obj) {\n\t\treturn (!!obj && obj.length === +obj.length);\n\t},\n\n\tisElement: function(obj) {\n\t\treturn !!(obj && obj.nodeType === 1);\n\t},\n\n\tisString: function(obj) {\n\t\treturn toString.call(obj) === '[object String]';\n\t},\n\n\tisNumber: function(obj) {\n\t\treturn toString.call(obj) === '[object Number]';\n\t},\n\n\thasSize: function(obj) {\n\t\tif (!obj) { return false; }\n\t\tfor (var key in obj) { return true; }\n\t\treturn false;\n\t},\n\n\tmapOver: function(arr, iterator, result) {\n\t\tvar idx = 0, length = arr.length;\n\t\tfor (; idx < length; idx++) {\n\t\t\tresult[idx] = iterator(arr[idx], idx);\n\t\t}\n\t\treturn result;\n\t},\n\n\textend: function(base) {\n\t\tif (!base) { return base; }\n\n\t\tvar args = arguments,\n\t\t\tidx = 1, length = args.length,\n\t\t\tsource, prop;\n\n\t\tfor (; idx < length; idx++) {\n\t\t\tsource = args[idx];\n\t\t\tif (source) {\n\t\t\t\tfor (prop in source) {\n\t\t\t\t\tbase[prop] = source[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n};"
  ]
}